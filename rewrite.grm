Zero = "0";
One = "1";
Bit = "0" | "1";
Digit = "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9";
export Cross = "a" (("b":"x")* | ("c"+ : "y"*) | ("":"fric")) "a";
export BitFlip1 = ((Zero: One)* (One: Zero)*)*;
export BitFlip2 = CDRewrite[BitFlip1, "", "", Digit*, 'sim', 'obl'];
export Parity1 = ((Bit: "")* (One: One)) | ((Bit: "")* (Zero: Zero));
export Parity2 = Reverse[((One: One) (Bit: "")*) | ((Zero: Zero) (Bit: "")*)];
export Parity3 = CDRewrite[Parity1, "[BOS]", "[EOS]", Bit*, 'sim', 'obl'];
export UnParity = Invert[Parity3];
export Split = CDRewrite [("" : " "), Bit, Bit, Bit*, 'sim', 'opt'];
export Three = Optimize [Bit+ " " Bit+ " " Bit+];
export SplitThree = (Split @ Three);

